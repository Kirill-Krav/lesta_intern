// Существует большое количество различных сортировок, 
// которые в зависимости от заданного массива будут работать по разному,
// в одном случае одна реализация будет быстрее в ином случае другая.
// Поскольку массив может быть абсолютно случайным, то сложно предугадать, 
// какая из сортировок будет быстрее. Существует например "Быстрая сортировка",
// которая в среднем имеет сложность O(nlogn), но в худшем случае имеет сложность O(n^2),
// и так как и упомяналось ранее массив является абсолютно случайным, нельзя считать, 
// что данная сортировка будет самой быстрой.
// Не смотря на то, что данная сортировка не будет во всех случаях являться самой эффективной,
// реализовал именно ее, так как средняя сложность как выше уже было упомянуто O(nlogn).
// Существует множество ее доработок, для того чтобы ее ускорить,
// но здесь продемонстрирована простая версия данной сортировки.

template<typename T>
void mySort(T begin, T end){
    if(end - begin < 2){
        return;
    }
    auto mid = *(begin + (end - begin) / 2);
    auto st = begin;
    auto en = end;
    --en;
    while(st <= en){
        while(*st < mid){
            ++st;
        }
        while(*en > mid){
            --en;
        }
        if(st <= en){
            int tmp = *st;
            *st = *en;
            *en = tmp;
            ++st;
            --en;
        }
    }
    mySort(begin, en + 1);
    mySort(st, end);
}